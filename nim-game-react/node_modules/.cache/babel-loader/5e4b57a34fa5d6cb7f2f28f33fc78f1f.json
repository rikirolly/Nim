{"ast":null,"code":"import React,{Component}from'react';import Pile from'./Pile';import Controls from'./Controls';import useNimGame from'../hooks/useNimGame';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";class Game extends Component{constructor(props){super(props);this.handlePlayerMove=(pileIndex,stonesToRemove)=>{const newPiles=[...this.state.piles];newPiles[pileIndex]-=stonesToRemove;this.setState({piles:newPiles},this.handleAIMove);};this.handleAIMove=()=>{const aiMove=this.calculateAIMove(this.state.piles);const newPiles=[...this.state.piles];newPiles[aiMove.index]-=aiMove.stones;this.setState({piles:newPiles,currentPlayer:'Player'});};this.state={piles:[3,5,7],// Initial piles of stones\ncurrentPlayer:'Player'// Player starts first\n};}calculateAIMove(piles){// AI logic to always win\nlet xor=piles.reduce((acc,pile)=>acc^pile,0);for(let i=0;i<piles.length;i++){if((piles[i]^xor)<piles[i]){return{index:i,stones:piles[i]-(piles[i]^xor)};}}// If no winning move, take from the first non-empty pile\nfor(let i=0;i<piles.length;i++){if(piles[i]>0){return{index:i,stones:1};// Remove one stone\n}}}render(){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Nim Game\"}),/*#__PURE__*/_jsx(\"div\",{children:this.state.piles.map((stones,index)=>/*#__PURE__*/_jsx(Pile,{index:index,stones:stones,onRemove:this.handlePlayerMove},index))}),/*#__PURE__*/_jsx(Controls,{onRemove:this.handlePlayerMove})]});}}export default Game;","map":{"version":3,"names":["React","Component","Pile","Controls","useNimGame","jsx","_jsx","jsxs","_jsxs","Game","constructor","props","handlePlayerMove","pileIndex","stonesToRemove","newPiles","state","piles","setState","handleAIMove","aiMove","calculateAIMove","index","stones","currentPlayer","xor","reduce","acc","pile","i","length","render","children","map","onRemove"],"sources":["/home/riki/Desktop/Nim/nim-game-react/src/components/Game.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Pile from './Pile';\nimport Controls from './Controls';\nimport useNimGame from '../hooks/useNimGame';\n\nclass Game extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            piles: [3, 5, 7], // Initial piles of stones\n            currentPlayer: 'Player', // Player starts first\n        };\n    }\n\n    handlePlayerMove = (pileIndex, stonesToRemove) => {\n        const newPiles = [...this.state.piles];\n        newPiles[pileIndex] -= stonesToRemove;\n\n        this.setState({ piles: newPiles }, this.handleAIMove);\n    };\n\n    handleAIMove = () => {\n        const aiMove = this.calculateAIMove(this.state.piles);\n        const newPiles = [...this.state.piles];\n        newPiles[aiMove.index] -= aiMove.stones;\n\n        this.setState({ piles: newPiles, currentPlayer: 'Player' });\n    };\n\n    calculateAIMove(piles) {\n        // AI logic to always win\n        let xor = piles.reduce((acc, pile) => acc ^ pile, 0);\n        for (let i = 0; i < piles.length; i++) {\n            if ((piles[i] ^ xor) < piles[i]) {\n                return { index: i, stones: piles[i] - (piles[i] ^ xor) };\n            }\n        }\n        // If no winning move, take from the first non-empty pile\n        for (let i = 0; i < piles.length; i++) {\n            if (piles[i] > 0) {\n                return { index: i, stones: 1 }; // Remove one stone\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Nim Game</h1>\n                <div>\n                    {this.state.piles.map((stones, index) => (\n                        <Pile\n                            key={index}\n                            index={index}\n                            stones={stones}\n                            onRemove={this.handlePlayerMove}\n                        />\n                    ))}\n                </div>\n                <Controls onRemove={this.handlePlayerMove} />\n            </div>\n        );\n    }\n}\n\nexport default Game;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}