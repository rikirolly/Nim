{"ast":null,"code":"var _jsxFileName = \"/home/riki/Desktop/Nim/nim-game-react/src/components/Game.js\";\nimport React, { Component } from 'react';\nimport Pile from './Pile';\nimport Controls from './Controls';\nimport useNimGame from '../hooks/useNimGame';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.handlePlayerMove = (pileIndex, stonesToRemove) => {\n      const newPiles = [...this.state.piles];\n      newPiles[pileIndex] -= stonesToRemove;\n      this.setState({\n        piles: newPiles\n      }, this.handleAIMove);\n    };\n    this.handleAIMove = () => {\n      const aiMove = this.calculateAIMove(this.state.piles);\n      const newPiles = [...this.state.piles];\n      newPiles[aiMove.index] -= aiMove.stones;\n      this.setState({\n        piles: newPiles,\n        currentPlayer: 'Player'\n      });\n    };\n    this.state = {\n      piles: [3, 5, 7],\n      // Initial piles of stones\n      currentPlayer: 'Player' // Player starts first\n    };\n  }\n  calculateAIMove(piles) {\n    // AI logic to always win\n    let xor = piles.reduce((acc, pile) => acc ^ pile, 0);\n    for (let i = 0; i < piles.length; i++) {\n      if ((piles[i] ^ xor) < piles[i]) {\n        return {\n          index: i,\n          stones: piles[i] - (piles[i] ^ xor)\n        };\n      }\n    }\n    // If no winning move, take from the first non-empty pile\n    for (let i = 0; i < piles.length; i++) {\n      if (piles[i] > 0) {\n        return {\n          index: i,\n          stones: 1\n        }; // Remove one stone\n      }\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Nim Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.piles.map((stones, index) => /*#__PURE__*/_jsxDEV(Pile, {\n          index: index,\n          stones: stones,\n          onRemove: this.handlePlayerMove\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {\n        onRemove: this.handlePlayerMove\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Game;","map":{"version":3,"names":["React","Component","Pile","Controls","useNimGame","jsxDEV","_jsxDEV","Game","constructor","props","handlePlayerMove","pileIndex","stonesToRemove","newPiles","state","piles","setState","handleAIMove","aiMove","calculateAIMove","index","stones","currentPlayer","xor","reduce","acc","pile","i","length","render","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onRemove"],"sources":["/home/riki/Desktop/Nim/nim-game-react/src/components/Game.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Pile from './Pile';\nimport Controls from './Controls';\nimport useNimGame from '../hooks/useNimGame';\n\nclass Game extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            piles: [3, 5, 7], // Initial piles of stones\n            currentPlayer: 'Player', // Player starts first\n        };\n    }\n\n    handlePlayerMove = (pileIndex, stonesToRemove) => {\n        const newPiles = [...this.state.piles];\n        newPiles[pileIndex] -= stonesToRemove;\n\n        this.setState({ piles: newPiles }, this.handleAIMove);\n    };\n\n    handleAIMove = () => {\n        const aiMove = this.calculateAIMove(this.state.piles);\n        const newPiles = [...this.state.piles];\n        newPiles[aiMove.index] -= aiMove.stones;\n\n        this.setState({ piles: newPiles, currentPlayer: 'Player' });\n    };\n\n    calculateAIMove(piles) {\n        // AI logic to always win\n        let xor = piles.reduce((acc, pile) => acc ^ pile, 0);\n        for (let i = 0; i < piles.length; i++) {\n            if ((piles[i] ^ xor) < piles[i]) {\n                return { index: i, stones: piles[i] - (piles[i] ^ xor) };\n            }\n        }\n        // If no winning move, take from the first non-empty pile\n        for (let i = 0; i < piles.length; i++) {\n            if (piles[i] > 0) {\n                return { index: i, stones: 1 }; // Remove one stone\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Nim Game</h1>\n                <div>\n                    {this.state.piles.map((stones, index) => (\n                        <Pile\n                            key={index}\n                            index={index}\n                            stones={stones}\n                            onRemove={this.handlePlayerMove}\n                        />\n                    ))}\n                </div>\n                <Controls onRemove={this.handlePlayerMove} />\n            </div>\n        );\n    }\n}\n\nexport default Game;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}