[{"/home/riki/Desktop/Nim/nim-game-react/src/index.js":"1","/home/riki/Desktop/Nim/nim-game-react/src/App.js":"2","/home/riki/Desktop/Nim/nim-game-react/src/components/Game.js":"3","/home/riki/Desktop/Nim/nim-game-react/src/components/Pile.js":"4","/home/riki/Desktop/Nim/nim-game-react/src/components/Controls.js":"5","/home/riki/Desktop/Nim/nim-game-react/src/hooks/useNimGame.js":"6","/home/riki/Desktop/Nim/nim-game-react/src/components/NimRow.js":"7","/home/riki/Desktop/Nim/nim-game-react/src/components/NimPiece.js":"8"},{"size":218,"mtime":1744925300990,"results":"9","hashOfConfig":"10"},{"size":293,"mtime":1744926542142,"results":"11","hashOfConfig":"10"},{"size":13249,"mtime":1744927767318,"results":"12","hashOfConfig":"10"},{"size":445,"mtime":1744925305182,"results":"13","hashOfConfig":"10"},{"size":801,"mtime":1744925308010,"results":"14","hashOfConfig":"10"},{"size":1953,"mtime":1744925310906,"results":"15","hashOfConfig":"10"},{"size":753,"mtime":1744926540468,"results":"16","hashOfConfig":"10"},{"size":322,"mtime":1744926639848,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1mzauoz",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/home/riki/Desktop/Nim/nim-game-react/src/index.js",[],["36","37"],"/home/riki/Desktop/Nim/nim-game-react/src/App.js",[],"/home/riki/Desktop/Nim/nim-game-react/src/components/Game.js",[],"/home/riki/Desktop/Nim/nim-game-react/src/components/Pile.js",[],"/home/riki/Desktop/Nim/nim-game-react/src/components/Controls.js",[],"/home/riki/Desktop/Nim/nim-game-react/src/hooks/useNimGame.js",["38"],"import { useState, useEffect } from 'react';\n\nconst useNimGame = () => {\n    const [piles, setPiles] = useState([3, 5, 7]); // Initial piles of stones\n    const [currentPlayer, setCurrentPlayer] = useState('Player'); // Player or AI\n    const [gameOver, setGameOver] = useState(false);\n\n    const isGameOver = (piles) => piles.every(pile => pile === 0);\n\n    const aiMove = () => {\n        // AI logic to always win\n        const totalStones = piles.reduce((acc, pile) => acc + pile, 0);\n        let move = 0;\n\n        for (let pile of piles) {\n            if (pile > 0) {\n                const newTotal = totalStones - pile;\n                if ((newTotal % 2) === 0) {\n                    move = pile;\n                    break;\n                }\n            }\n        }\n\n        if (move === 0) {\n            // If no winning move, take one stone from the first non-empty pile\n            move = piles.find(pile => pile > 0);\n        }\n\n        return move;\n    };\n\n    const playerMove = (pileIndex, stones) => {\n        if (piles[pileIndex] >= stones) {\n            const newPiles = [...piles];\n            newPiles[pileIndex] -= stones;\n            setPiles(newPiles);\n            setCurrentPlayer('AI');\n        }\n    };\n\n    useEffect(() => {\n        if (currentPlayer === 'AI' && !gameOver) {\n            const move = aiMove();\n            const pileIndex = piles.findIndex(pile => pile >= move);\n            const newPiles = [...piles];\n            newPiles[pileIndex] -= move;\n            setPiles(newPiles);\n            setCurrentPlayer('Player');\n        }\n\n        if (isGameOver(piles)) {\n            setGameOver(true);\n        }\n    }, [currentPlayer, piles]);\n\n    const resetGame = () => {\n        setPiles([3, 5, 7]);\n        setCurrentPlayer('Player');\n        setGameOver(false);\n    };\n\n    return {\n        piles,\n        currentPlayer,\n        gameOver,\n        playerMove,\n        resetGame,\n    };\n};\n\nexport default useNimGame;","/home/riki/Desktop/Nim/nim-game-react/src/components/NimRow.js",[],"/home/riki/Desktop/Nim/nim-game-react/src/components/NimPiece.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":55,"column":8,"nodeType":"45","endLine":55,"endColumn":30,"suggestions":"46"},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'aiMove' and 'gameOver'. Either include them or remove the dependency array.","ArrayExpression",["49"],"no-global-assign","no-unsafe-negation",{"desc":"50","fix":"51"},"Update the dependencies array to be: [aiMove, currentPlayer, gameOver, piles]",{"range":"52","text":"53"},[1651,1673],"[aiMove, currentPlayer, gameOver, piles]"]